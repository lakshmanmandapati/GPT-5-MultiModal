{"ast":null,"code":"var _jsxFileName = \"/Users/lakshmanmandapati/Local/GPT-5-Multimodal-Chat-App/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\nimport { Send, Copy, Upload, MessageSquare, Sparkles, FileText, Eye, Search, RotateCcw, Bot, User } from 'lucide-react';\nimport './App.css';\nimport './markdown.css';\nimport 'highlight.js/styles/github-dark.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Default questions to show users\nconst DEFAULT_QUESTIONS = [\"What is artificial intelligence?\", \"Explain machine learning in simple terms\", \"How does neural networks work?\", \"What are the applications of AI?\"];\n\n// Preset actions for image analysis\nconst PRESET_ACTIONS = [{\n  key: 'analyze',\n  label: 'Analyze',\n  icon: Search,\n  description: 'Detailed analysis'\n}, {\n  key: 'summarize',\n  label: 'Summarize',\n  icon: FileText,\n  description: 'Quick summary'\n}, {\n  key: 'describe',\n  label: 'Describe',\n  icon: Eye,\n  description: 'Detailed description'\n}, {\n  key: 'extract_text',\n  label: 'Extract Text',\n  icon: FileText,\n  description: 'OCR text extraction'\n}];\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [showPresets, setShowPresets] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  React.useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Handle file drop\n  const onDrop = acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setUploadedImage(file);\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImagePreview(reader.result);\n        setShowPresets(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.gif', '.webp']\n    },\n    multiple: false\n  });\n\n  // Send text message\n  const sendTextMessage = async message => {\n    if (!message.trim()) return;\n    const newUserMessage = {\n      role: 'user',\n      content: message\n    };\n    const updatedMessages = [...messages, newUserMessage];\n    setMessages(updatedMessages);\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat/text`, {\n        message: message,\n        conversation_history: messages\n      });\n      setMessages(response.data.conversation_history);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...updatedMessages, {\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your request. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send image with preset action\n  const sendImageWithPreset = async presetAction => {\n    if (!uploadedImage) return;\n    setIsLoading(true);\n    setShowPresets(false);\n    const formData = new FormData();\n    formData.append('image', uploadedImage);\n    formData.append('preset_action', presetAction);\n    try {\n      var _PRESET_ACTIONS$find;\n      const response = await axios.post(`${API_BASE_URL}/chat/image-upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const userMessage = {\n        role: 'user',\n        content: `[Image uploaded] - ${(_PRESET_ACTIONS$find = PRESET_ACTIONS.find(p => p.key === presetAction)) === null || _PRESET_ACTIONS$find === void 0 ? void 0 : _PRESET_ACTIONS$find.label}`\n      };\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.response\n      };\n      setMessages([...messages, userMessage, assistantMessage]);\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'Sorry, there was an error analyzing the image. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send image with custom prompt\n  const sendImageWithPrompt = async prompt => {\n    if (!uploadedImage || !prompt.trim()) return;\n    setIsLoading(true);\n    setShowPresets(false);\n    const formData = new FormData();\n    formData.append('image', uploadedImage);\n    formData.append('prompt', prompt);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat/image-upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const userMessage = {\n        role: 'user',\n        content: `[Image uploaded] ${prompt}`\n      };\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.response\n      };\n      setMessages([...messages, userMessage, assistantMessage]);\n      setInputMessage('');\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'Sorry, there was an error analyzing the image. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Copy to clipboard\n  const copyToClipboard = async text => {\n    try {\n      await navigator.clipboard.writeText(text);\n      // You could add a toast notification here\n    } catch (error) {\n      console.error('Failed to copy to clipboard:', error);\n    }\n  };\n\n  // Clear uploaded image\n  const clearImage = () => {\n    setUploadedImage(null);\n    setImagePreview(null);\n    setShowPresets(false);\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (uploadedImage && inputMessage.trim()) {\n      sendImageWithPrompt(inputMessage);\n    } else if (inputMessage.trim()) {\n      sendTextMessage(inputMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            className: \"logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"GPT-5 Multimodal Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \"Chat with AI using text and images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-content\",\n            children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n              className: \"welcome-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Welcome to GPT-5 Multimodal Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Ask questions, upload images, or try one of these examples:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"default-questions\",\n              children: DEFAULT_QUESTIONS.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"question-button\",\n                onClick: () => sendTextMessage(question),\n                disabled: isLoading,\n                children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n                  className: \"question-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), question]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: message.role === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n                className: \"avatar-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n                className: \"avatar-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                children: message.role === 'assistant' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"markdown-content\",\n                  children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                    rehypePlugins: [rehypeHighlight],\n                    components: {\n                      code: ({\n                        className,\n                        children,\n                        ...props\n                      }) => {\n                        const match = /language-(\\w+)/.exec(className || '');\n                        return match ? /*#__PURE__*/_jsxDEV(\"pre\", {\n                          className: \"code-block\",\n                          children: /*#__PURE__*/_jsxDEV(\"code\", {\n                            className: className,\n                            ...props,\n                            children: children\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 286,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 33\n                        }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                          className: \"inline-code\",\n                          ...props,\n                          children: children\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 33\n                        }, this);\n                      }\n                    },\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this) : message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"copy-button\",\n                onClick: () => copyToClipboard(message.content),\n                title: \"Copy to clipboard\",\n                children: /*#__PURE__*/_jsxDEV(Copy, {\n                  className: \"copy-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message assistant\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: /*#__PURE__*/_jsxDEV(Bot, {\n                className: \"avatar-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-dots\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"AI is thinking...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imagePreview,\n            alt: \"Uploaded\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-image\",\n            onClick: clearImage,\n            children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n              className: \"remove-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), showPresets && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preset-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quick Actions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preset-buttons\",\n            children: PRESET_ACTIONS.map(preset => {\n              const IconComponent = preset.icon;\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"preset-button\",\n                onClick: () => sendImageWithPreset(preset.key),\n                disabled: isLoading,\n                children: [/*#__PURE__*/_jsxDEV(IconComponent, {\n                  className: \"preset-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: preset.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 25\n                }, this)]\n              }, preset.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"preset-hint\",\n            children: \"Or type a custom question below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: `dropzone ${isDragActive ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Upload, {\n            className: \"upload-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isDragActive ? 'Drop image here' : 'Drag & drop image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"input-form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              placeholder: uploadedImage ? \"Ask something about the image...\" : \"Type your message...\",\n              className: \"message-input\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"send-button\",\n              disabled: isLoading || !inputMessage.trim() && !uploadedImage,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                className: \"send-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cYYrRhuVvb+3JE/rlxmB9pAX1ZE=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","useDropzone","ReactMarkdown","rehypeHighlight","Send","Copy","Upload","MessageSquare","Sparkles","FileText","Eye","Search","RotateCcw","Bot","User","jsxDEV","_jsxDEV","API_BASE_URL","DEFAULT_QUESTIONS","PRESET_ACTIONS","key","label","icon","description","App","_s","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","uploadedImage","setUploadedImage","imagePreview","setImagePreview","showPresets","setShowPresets","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","useEffect","onDrop","acceptedFiles","file","type","startsWith","reader","FileReader","onload","result","readAsDataURL","getRootProps","getInputProps","isDragActive","accept","multiple","sendTextMessage","message","trim","newUserMessage","role","content","updatedMessages","response","post","conversation_history","data","error","console","sendImageWithPreset","presetAction","formData","FormData","append","_PRESET_ACTIONS$find","headers","userMessage","find","p","assistantMessage","sendImageWithPrompt","prompt","copyToClipboard","text","navigator","clipboard","writeText","clearImage","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","onClick","disabled","rehypePlugins","components","code","props","match","exec","title","ref","src","alt","preset","IconComponent","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/lakshmanmandapati/Local/GPT-5-Multimodal-Chat-App/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\nimport { \n  Send, \n  Copy, \n  Upload, \n  MessageSquare,\n  Sparkles,\n  FileText,\n  Eye,\n  Search,\n  RotateCcw,\n  Bot,\n  User\n} from 'lucide-react';\nimport './App.css';\nimport './markdown.css';\nimport 'highlight.js/styles/github-dark.css';\n\ninterface Message {\n  role: 'user' | 'assistant';\n  content: string;\n}\n\ninterface ChatResponse {\n  response: string;\n  conversation_history: Message[];\n  analysis_type?: string;\n}\n\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Default questions to show users\nconst DEFAULT_QUESTIONS = [\n  \"What is artificial intelligence?\",\n  \"Explain machine learning in simple terms\",\n  \"How does neural networks work?\",\n  \"What are the applications of AI?\"\n];\n\n// Preset actions for image analysis\nconst PRESET_ACTIONS = [\n  { key: 'analyze', label: 'Analyze', icon: Search, description: 'Detailed analysis' },\n  { key: 'summarize', label: 'Summarize', icon: FileText, description: 'Quick summary' },\n  { key: 'describe', label: 'Describe', icon: Eye, description: 'Detailed description' },\n  { key: 'extract_text', label: 'Extract Text', icon: FileText, description: 'OCR text extraction' }\n];\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [uploadedImage, setUploadedImage] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [showPresets, setShowPresets] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  React.useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Handle file drop\n  const onDrop = (acceptedFiles: File[]) => {\n    const file = acceptedFiles[0];\n    if (file && file.type.startsWith('image/')) {\n      setUploadedImage(file);\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImagePreview(reader.result as string);\n        setShowPresets(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.gif', '.webp']\n    },\n    multiple: false\n  });\n\n  // Send text message\n  const sendTextMessage = async (message: string) => {\n    if (!message.trim()) return;\n\n    const newUserMessage: Message = { role: 'user', content: message };\n    const updatedMessages = [...messages, newUserMessage];\n    setMessages(updatedMessages);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post<ChatResponse>(`${API_BASE_URL}/chat/text`, {\n        message: message,\n        conversation_history: messages\n      });\n\n      setMessages(response.data.conversation_history);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...updatedMessages, {\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your request. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send image with preset action\n  const sendImageWithPreset = async (presetAction: string) => {\n    if (!uploadedImage) return;\n\n    setIsLoading(true);\n    setShowPresets(false);\n\n    const formData = new FormData();\n    formData.append('image', uploadedImage);\n    formData.append('preset_action', presetAction);\n\n    try {\n      const response = await axios.post<ChatResponse>(`${API_BASE_URL}/chat/image-upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      const userMessage: Message = {\n        role: 'user',\n        content: `[Image uploaded] - ${PRESET_ACTIONS.find(p => p.key === presetAction)?.label}`\n      };\n      \n      const assistantMessage: Message = {\n        role: 'assistant',\n        content: response.data.response\n      };\n\n      setMessages([...messages, userMessage, assistantMessage]);\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'Sorry, there was an error analyzing the image. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Send image with custom prompt\n  const sendImageWithPrompt = async (prompt: string) => {\n    if (!uploadedImage || !prompt.trim()) return;\n\n    setIsLoading(true);\n    setShowPresets(false);\n\n    const formData = new FormData();\n    formData.append('image', uploadedImage);\n    formData.append('prompt', prompt);\n\n    try {\n      const response = await axios.post<ChatResponse>(`${API_BASE_URL}/chat/image-upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      const userMessage: Message = {\n        role: 'user',\n        content: `[Image uploaded] ${prompt}`\n      };\n      \n      const assistantMessage: Message = {\n        role: 'assistant',\n        content: response.data.response\n      };\n\n      setMessages([...messages, userMessage, assistantMessage]);\n      setInputMessage('');\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'Sorry, there was an error analyzing the image. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Copy to clipboard\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      // You could add a toast notification here\n    } catch (error) {\n      console.error('Failed to copy to clipboard:', error);\n    }\n  };\n\n  // Clear uploaded image\n  const clearImage = () => {\n    setUploadedImage(null);\n    setImagePreview(null);\n    setShowPresets(false);\n  };\n\n  // Handle form submission\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (uploadedImage && inputMessage.trim()) {\n      sendImageWithPrompt(inputMessage);\n    } else if (inputMessage.trim()) {\n      sendTextMessage(inputMessage);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <div className=\"logo\">\n            <Sparkles className=\"logo-icon\" />\n            <h1>GPT-5 Multimodal Chat</h1>\n          </div>\n          <p className=\"subtitle\">Chat with AI using text and images</p>\n        </div>\n      </header>\n\n      <main className=\"app-main\">\n        {/* Chat Messages */}\n        <div className=\"chat-container\">\n          {messages.length === 0 ? (\n            <div className=\"welcome-screen\">\n              <div className=\"welcome-content\">\n                <Sparkles className=\"welcome-icon\" />\n                <h2>Welcome to GPT-5 Multimodal Chat</h2>\n                <p>Ask questions, upload images, or try one of these examples:</p>\n                \n                <div className=\"default-questions\">\n                  {DEFAULT_QUESTIONS.map((question, index) => (\n                    <button\n                      key={index}\n                      className=\"question-button\"\n                      onClick={() => sendTextMessage(question)}\n                      disabled={isLoading}\n                    >\n                      <MessageSquare className=\"question-icon\" />\n                      {question}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"messages\">\n              {messages.map((message, index) => (\n                <div key={index} className={`message ${message.role}`}>\n                  <div className=\"message-avatar\">\n                    {message.role === 'user' ? (\n                      <User className=\"avatar-icon\" />\n                    ) : (\n                      <Bot className=\"avatar-icon\" />\n                    )}\n                  </div>\n                  <div className=\"message-content\">\n                    <div className=\"message-text\">\n                      {message.role === 'assistant' ? (\n                        <div className=\"markdown-content\">\n                          <ReactMarkdown\n                            rehypePlugins={[rehypeHighlight]}\n                            components={{\n                              code: ({ className, children, ...props }: any) => {\n                              const match = /language-(\\w+)/.exec(className || '');\n                              return match ? (\n                                <pre className=\"code-block\">\n                                  <code className={className} {...props}>\n                                    {children}\n                                  </code>\n                                </pre>\n                              ) : (\n                                <code className=\"inline-code\" {...props}>\n                                  {children}\n                                </code>\n                              );\n                            },\n                          }}\n                        >\n                          {message.content}\n                          </ReactMarkdown>\n                        </div>\n                      ) : (\n                        message.content\n                      )}\n                    </div>\n                    {message.role === 'assistant' && (\n                      <button\n                        className=\"copy-button\"\n                        onClick={() => copyToClipboard(message.content)}\n                        title=\"Copy to clipboard\"\n                      >\n                        <Copy className=\"copy-icon\" />\n                      </button>\n                    )}\n                  </div>\n                </div>\n              ))}\n              {isLoading && (\n                <div className=\"message assistant\">\n                  <div className=\"message-avatar\">\n                    <Bot className=\"avatar-icon\" />\n                  </div>\n                  <div className=\"message-content\">\n                    <div className=\"loading\">\n                      <div className=\"loading-dots\">\n                        <div className=\"dot\"></div>\n                        <div className=\"dot\"></div>\n                        <div className=\"dot\"></div>\n                      </div>\n                      <span>AI is thinking...</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n          )}\n        </div>\n\n        {/* Image Upload Area */}\n        {imagePreview && (\n          <div className=\"image-preview-container\">\n            <div className=\"image-preview\">\n              <img src={imagePreview} alt=\"Uploaded\" className=\"preview-image\" />\n              <button className=\"remove-image\" onClick={clearImage}>\n                <RotateCcw className=\"remove-icon\" />\n              </button>\n            </div>\n            \n            {showPresets && (\n              <div className=\"preset-actions\">\n                <h3>Quick Actions:</h3>\n                <div className=\"preset-buttons\">\n                  {PRESET_ACTIONS.map((preset) => {\n                    const IconComponent = preset.icon;\n                    return (\n                      <button\n                        key={preset.key}\n                        className=\"preset-button\"\n                        onClick={() => sendImageWithPreset(preset.key)}\n                        disabled={isLoading}\n                      >\n                        <IconComponent className=\"preset-icon\" />\n                        <span>{preset.label}</span>\n                      </button>\n                    );\n                  })}\n                </div>\n                <p className=\"preset-hint\">Or type a custom question below</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Input Area */}\n        <div className=\"input-container\">\n          {/* File Upload */}\n          <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n            <input {...getInputProps()} />\n            <Upload className=\"upload-icon\" />\n            <span>{isDragActive ? 'Drop image here' : 'Drag & drop image'}</span>\n          </div>\n\n          {/* Text Input */}\n          <form onSubmit={handleSubmit} className=\"input-form\">\n            <div className=\"input-wrapper\">\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                placeholder={uploadedImage ? \"Ask something about the image...\" : \"Type your message...\"}\n                className=\"message-input\"\n                disabled={isLoading}\n              />\n              <button\n                type=\"submit\"\n                className=\"send-button\"\n                disabled={isLoading || (!inputMessage.trim() && !uploadedImage)}\n              >\n                <Send className=\"send-icon\" />\n              </button>\n            </div>\n          </form>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}